<!-- Content div : Informations, ect... -->
<link rel="stylesheet" type="text/css" href="/style/guild-panel-style">
<script src="https://unpkg.com/blockly/blockly.min.js"></script><!-- Blockly -->
<div id="content_div">

  <!-- This div is just under the #top_div, contain guild name and picture  -->
  <%- include("../assets/guild_div.ejs", {guild:guild})%>

  <!-- This div contain the blocks on top of this space -->
  <div id="content_div_header_div">
    <div class="content_div_header_div_subdiv">
      <p>
        <a href="#">Manage server variables</a>
      </p>
    </div>

    <div class="content_div_header_div_subdiv">
      <p>
        <a href="#">Modifications logs</a>
      </p>
    </div>

    <div class="content_div_header_div_subdiv">
      <p>
        <a href="/panel/<%- guild.id %>/rollback">Rollback Workspace</a>
      </p>
    </div>
  </div>

  <div id="content_blockly">
  </div>

  <div id="content_bottom_div">
    <button onclick="sendWorkspaceToServer()" css="z-index: 999;">Send code</button>
    <!-- Temporary ! -->
  </div>


</div>

<script src="/socket.io/socket.io.js"></script>
<script src="https://unpkg.com/blockly/blockly.min.js"></script>
<script><%- localization %>Blockly = init(Blockly);</script>

<script>
  const socket = io();
  const toolbox = document.getElementById("toolbox");

  <%
    for(var i=0;i<blocks.length;i++){
      %> Blockly.defineBlocksWithJsonArray(<%- blocks[i] %>); <%
    }
  %>

  const custom_theme = Blockly.Theme.defineTheme('themeName', {
    'base': Blockly.Themes.Classic,
    'startHats': true
  });

  var options = {
    toolbox : toolbox,
    collapse : true,
    comments : true,
    disable : false,
    maxBlocks : Infinity,
    trashcan : true,
    horizontalLayout : false,
    toolboxPosition : 'start',
    css : true,
    //media : 'https://blockly-demo.appspot.com/static/media/',
    rtl : false,
    scrollbars : true,
    sounds : true,
    oneBasedIndex : true,
    grid:
     {spacing: 20,
      length: 6,
      colour: '#ccc',
      snap: true},
    zoom:
     {controls: true,
      wheel: true,
      startScale: 1.0,
      maxScale: 3,
      minScale: 0.3,
      scaleSpeed: 1.2,
      pinch: true},
    theme: custom_theme
  };

  let workspace = Blockly.inject("#content_blockly", options);
  workspace.addChangeListener(Blockly.Events.disableOrphans);//Disable blocks not on events

  //If a workspace is stored in database, it is restored here
  <% if(workspace_xml){ %>
    Blockly.Xml.domToWorkspace(Blockly.Xml.textToDom(`<%- workspace_xml %>`), workspace); <%
  }%>

  //Function to send workspace's blocks to the server :
  function sendWorkspaceToServer(){
    socket.emit("send_workspace","<%- guild.id %>" , Blockly.Xml.domToText(Blockly.Xml.workspaceToDom(workspace, true/*Skip blocks id*/)), (callback)=>{
      if(callback.status == "OK"){
        showWindow(true, "Succès !", "Le code a été enregistré, et est prêt à être utilisé !");
      }else{
        showWindow(false, "Echec !", "Il y a eu une erreur durant le traitement du code.");
        console.log("ERREUR : "+ callback.status);
      }
    });
  }
</script>
