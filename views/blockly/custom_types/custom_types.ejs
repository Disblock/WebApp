var CustomFields = CustomFields || {};//Object that store custom types

//Server object
CustomFields.Server = function(opt_value, opt_validator) {
  opt_value = this.doClassValidation_(opt_value);
  if (opt_value === null) {
    opt_value = CustomFields.Server.DEFAULT_VALUE;
  }

  CustomFields.Server.superClass_.constructor.call(
      this, opt_value, opt_validator);
  };
Blockly.utils.object.inherits(CustomFields.Server, Blockly.Field);

CustomFields.Server.fromJson = function(options) {
  var value = Blockly.utils.replaceMessageReferences(
      options['value']);
  return new CustomFields.Server(value);
};

Blockly.fieldRegistry.register('Server', CustomFields.Server);



//Channel object
CustomFields.Channel = function(opt_value, opt_validator) {
  opt_value = this.doClassValidation_(opt_value);
  if (opt_value === null) {
    opt_value = CustomFields.Channel.DEFAULT_VALUE;
  }

  CustomFields.Channel.superClass_.constructor.call(
      this, opt_value, opt_validator);
  };
Blockly.utils.object.inherits(CustomFields.Channel, Blockly.Field);

CustomFields.Channel.fromJson = function(options) {
  var value = Blockly.utils.replaceMessageReferences(
      options['value']);
  return new CustomFields.Channel(value);
};

Blockly.fieldRegistry.register('Channel', CustomFields.Channel);

//Category object
CustomFields.Category = function(opt_value, opt_validator) {
  opt_value = this.doClassValidation_(opt_value);
  if (opt_value === null) {
    opt_value = CustomFields.Category.DEFAULT_VALUE;
  }

  CustomFields.Category.superClass_.constructor.call(
      this, opt_value, opt_validator);
  };
Blockly.utils.object.inherits(CustomFields.Category, Blockly.Field);

CustomFields.Category.fromJson = function(options) {
  var value = Blockly.utils.replaceMessageReferences(
      options['value']);
  return new CustomFields.Category(value);
};

Blockly.fieldRegistry.register('Category', CustomFields.Category);



//User object
CustomFields.User = function(opt_value, opt_validator) {
  opt_value = this.doClassValidation_(opt_value);
  if (opt_value === null) {
    opt_value = CustomFields.User.DEFAULT_VALUE;
  }

  CustomFields.User.superClass_.constructor.call(
      this, opt_value, opt_validator);
  };
Blockly.utils.object.inherits(CustomFields.User, Blockly.Field);

CustomFields.User.fromJson = function(options) {
  var value = Blockly.utils.replaceMessageReferences(
      options['value']);
  return new CustomFields.User(value);
};

Blockly.fieldRegistry.register('User', CustomFields.User);



//Message object
CustomFields.Message = function(opt_value, opt_validator) {
  opt_value = this.doClassValidation_(opt_value);
  if (opt_value === null) {
    opt_value = CustomFields.Message.DEFAULT_VALUE;
  }

  CustomFields.Message.superClass_.constructor.call(
      this, opt_value, opt_validator);
  };
Blockly.utils.object.inherits(CustomFields.Message, Blockly.Field);

CustomFields.Message.fromJson = function(options) {
  var value = Blockly.utils.replaceMessageReferences(
      options['value']);
  return new CustomFields.Message(value);
};

Blockly.fieldRegistry.register('Message', CustomFields.Message);



//Emoji object
CustomFields.Emoji = function(opt_value, opt_validator) {
  opt_value = this.doClassValidation_(opt_value);
  if (opt_value === null) {
    opt_value = CustomFields.Emoji.DEFAULT_VALUE;
  }

  CustomFields.Emoji.superClass_.constructor.call(
      this, opt_value, opt_validator);
  };
Blockly.utils.object.inherits(CustomFields.Emoji, Blockly.Field);

CustomFields.Emoji.fromJson = function(options) {
  var value = Blockly.utils.replaceMessageReferences(
      options['value']);
  return new CustomFields.Emoji(value);
};

Blockly.fieldRegistry.register('Emoji', CustomFields.Emoji);




//Invitation object
CustomFields.Invitation = function(opt_value, opt_validator) {
  opt_value = this.doClassValidation_(opt_value);
  if (opt_value === null) {
    opt_value = CustomFields.Invitation.DEFAULT_VALUE;
  }

  CustomFields.Invitation.superClass_.constructor.call(
      this, opt_value, opt_validator);
  };
Blockly.utils.object.inherits(CustomFields.Invitation, Blockly.Field);

CustomFields.Invitation.fromJson = function(options) {
  var value = Blockly.utils.replaceMessageReferences(
      options['value']);
  return new CustomFields.Invitation(value);
};

Blockly.fieldRegistry.register('Invitation', CustomFields.Invitation);



//Reaction object
CustomFields.Reaction = function(opt_value, opt_validator) {
  opt_value = this.doClassValidation_(opt_value);
  if (opt_value === null) {
    opt_value = CustomFields.Reaction.DEFAULT_VALUE;
  }

  CustomFields.Reaction.superClass_.constructor.call(
      this, opt_value, opt_validator);
  };
Blockly.utils.object.inherits(CustomFields.Reaction, Blockly.Field);

CustomFields.Reaction.fromJson = function(options) {
  var value = Blockly.utils.replaceMessageReferences(
      options['value']);
  return new CustomFields.Reaction(value);
};

Blockly.fieldRegistry.register('Reaction', CustomFields.Reaction);



//Rank object
CustomFields.Rank = function(opt_value, opt_validator) {
  opt_value = this.doClassValidation_(opt_value);
  if (opt_value === null) {
    opt_value = CustomFields.Rank.DEFAULT_VALUE;
  }

  CustomFields.Rank.superClass_.constructor.call(
      this, opt_value, opt_validator);
  };
Blockly.utils.object.inherits(CustomFields.Rank, Blockly.Field);

CustomFields.Rank.fromJson = function(options) {
  var value = Blockly.utils.replaceMessageReferences(
      options['value']);
  return new CustomFields.Rank(value);
};

Blockly.fieldRegistry.register('Rank', CustomFields.Rank);


//VoiceChannel
