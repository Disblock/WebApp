version: '3'


services:
  redis-server:
    image: redis:alpine
    restart: always
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - redis_data:/data
      - ./docker-compose/redis-config/default-redis.conf:/usr/local/etc/redis/redis.conf # You should specify here the path to a redis config file if needed / default file not available.


#https://hub.docker.com/_/postgres/?tab=description
  db:
    image: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: always
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_DATABASE}

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  #Web panel
  disblock:
    depends_on:
      - redis-server
      - db
    image: disblock
    ports:
      - 8081:8081
      - 80:80
      - 443:443
    restart: always
    environment:
      #Values are stored in .env file
      PGHOST: ${DB_HOST}
      PGPASSWORD: ${DB_PASSWORD}
      PGUSER: ${DB_USER}
      PGDATABASE: ${DB_DATABASE}
      PGPORT: ${DB_PORT}
      NODE_ENV: ${NODE_ENV}
      DEBUG: ${DEBUG}
      LOGS_MAX_FILES: ${LOGS_MAX_FILES}
      HTTPS: ${HTTPS}
      ENABLE_REGISTRATION: ${ENABLE_REGISTRATION}
      LOGIN_URL: ${LOGIN_URL}
      REDIRECT_URL: ${REDIRECT_URL}
      INVITE_BOT_URL: ${INVITE_BOT_URL}
      clientId: ${CLIENT_ID}
      clientSecret: ${CLIENT_SECRET}
      NP_WORKSPACE_MAX_BLOCKS: ${NP_WORKSPACE_MAX_BLOCKS}
      NP_DISABLED_BLOCKS: ${NP_DISABLED_BLOCKS}
      NP_MAX_ROLLBACKS: ${NP_MAX_ROLLBACKS}
      NP_MAX_LOGS: ${NP_MAX_LOGS}
      P_WORKSPACE_MAX_BLOCKS: ${P_WORKSPACE_MAX_BLOCKS}
      P_DISABLED_BLOCKS: ${P_DISABLED_BLOCKS}
      P_MAX_ROLLBACKS: ${P_MAX_ROLLBACKS}
      P_MAX_LOGS: ${P_MAX_LOGS}
    volumes:
      - disblock_logs:/node/logs
      - ./certs/:/node/certs/:ro
      #The host /cert/ folder is sent in docker image, in folder /node/cert/.
      #:ro = Read Only

  #Discord bot
  disbot:
    depends_on:
      - db
    image: disbot
    restart: always
    volumes:
      - disbot_logs:/node/logs
    environment:
      PGHOST: ${DB_HOST}
      PGPASSWORD: ${DB_PASSWORD}
      PGUSER: ${DB_USER}
      PGDATABASE: ${DB_DATABASE}
      PGPORT: ${DB_PORT}
      TOKEN: ${BOT_TOKEN}
      LOGS_MAX_FILES: ${LOGS_MAX_FILES}
      DEBUG: ${DEBUG}
      NODE_ENV: ${NODE_ENV}
      BOT_LOG_ERRORS: ${BOT_LOG_ERRORS}
      BOT_MOTD: ${BOT_MOTD}

volumes:
  db_data: {}
  disblock_logs: {}
  disbot_logs: {}
  redis_data: {}
